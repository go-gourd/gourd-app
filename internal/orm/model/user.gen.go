// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"encoding/json"

	"gorm.io/plugin/soft_delete"
)

const TableNameUser = "user"

// User 用户表
type User struct {
	ID         int64                 `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	Nickname   string                `gorm:"column:nickname;not null;comment:昵称" json:"nickname"`                           // 昵称
	Username   string                `gorm:"column:username;not null;comment:用户名(登录账号)" json:"username"`                    // 用户名(登录账号)
	Avatar     string                `gorm:"column:avatar;not null;comment:头像" json:"avatar"`                               // 头像
	Password   string                `gorm:"column:password;not null;comment:密码 md5" json:"password"`                       // 密码 md5
	CreateTime int64                 `gorm:"column:create_time;not null;autoCreateTime;comment:创建|注册时间" json:"create_time"` // 创建|注册时间
	LoginTime  int32                 `gorm:"column:login_time;not null;comment:登录时间" json:"login_time"`                     // 登录时间
	Status     int32                 `gorm:"column:status;not null;default:1;comment:状态" json:"status"`                     // 状态
	DeleteTime soft_delete.DeletedAt `gorm:"column:delete_time;not null;comment:删除时间" json:"delete_time"`                   // 删除时间
}

// MarshalBinary 支持json序列化
func (m *User) MarshalBinary() (data []byte, err error) {
	return json.Marshal(m)
}

// UnmarshalBinary 支持json反序列化
func (m *User) UnmarshalBinary(data []byte) error {
	return json.Unmarshal(data, m)
}

// TableName User's table name
func (*User) TableName() string {
	return TableNameUser
}
